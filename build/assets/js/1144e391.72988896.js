"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6361],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,h=m["".concat(s,".").concat(d)]||m[d]||l[d]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3925:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return c},assets:function(){return u},toc:function(){return l},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],p={},s="Payment Provider",c={unversionedId:"concepts/payment_provider",id:"concepts/payment_provider",title:"Payment Provider",description:"Through a payment provider a user is able to obtain points. This chapter explains more in detail how this process works.",source:"@site/docs/concepts/payment_provider.md",sourceDirName:"concepts",slug:"/concepts/payment_provider",permalink:"/docs/concepts/payment_provider",editUrl:"https://github.com/apioo/fusio-docs/edit/main/docs/concepts/payment_provider.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Migration",permalink:"/docs/concepts/migration"},next:{title:"Registration",permalink:"/docs/concepts/registration"}},u={},l=[{value:"Implementation",id:"implementation",level:2}],m={toc:l};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"payment-provider"},"Payment Provider"),(0,a.kt)("p",null,"Through a payment provider a user is able to obtain points. This chapter explains more in detail how this process works.\nIf a user of your API wants to obtain points he has to use a configured payment provider. To start the payment process\nyour app has to send a POST request to the ",(0,a.kt)("inlineCode",{parentName:"p"},"/consumer/transaction/prepare/stripe")," endpoint (in this example we use\nstripe as provider) with the following payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "planId": 1,\n  "returnUrl": "http://my-app.com/payment/return?transaction_id={transaction_id}"\n}\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"planId")," is the id of a plan which was configured at the backend. The return url is the url of your app where the\nuser returns after the payment was completed. If everything is valid the endpoint returns an approval url of the payment\nprovider:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "approvalUrl": ""\n}\n')),(0,a.kt)("p",null,"Your app has to simply redirect the user to this approval url. Then the user authenticates at the payment provider and\napproves the payment. Then the user gets redirected to the ",(0,a.kt)("inlineCode",{parentName:"p"},"/consumer/transaction/execute/{transaction_id}")," endpoint\nwhere Fusio checks whether the payment was accepted. If yes Fusio credits the amount of points to the user."),(0,a.kt)("p",null,"Then it redirects the user to the return url which was provided in the initial prepare call. You app can then lookup the\nstatus of the transaction and display a fitting message."),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("p",null,"It is also easy to implement a custom payment provider. It is important that the provider supports a redirect based\nflow. It is currently not possible to simply enter the credit card number. To create a new payment provider you need to\ncreate a class which implements the ",(0,a.kt)("inlineCode",{parentName:"p"},"Fusio\\Engine\\Payment\\ProviderInterface")))}d.isMDXComponent=!0}}]);