"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4742],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return f}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),u=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=u(e.components);return o.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=u(t),f=r,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||i;return t?o.createElement(m,c(c({ref:n},l),{},{components:t})):o.createElement(m,c({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,c=new Array(i);c[0]=d;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a.mdxType="string"==typeof e?e:r,c[1]=a;for(var u=2;u<i;u++)c[u]=t[u];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8370:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return u},assets:function(){return l},toc:function(){return p},default:function(){return f}});var o=t(7462),r=t(3366),i=(t(7294),t(3905)),c=["components"],a={},s="Connection",u={unversionedId:"backend/api/connection/index",id:"backend/api/connection/index",title:"Connection",description:"A connection enables Fusio to connect to other remote services. This can be i.e. a database or message queue service.",source:"@site/docs/backend/api/connection/index.md",sourceDirName:"backend/api/connection",slug:"/backend/api/connection/",permalink:"/docs/backend/api/connection/",editUrl:"https://github.com/apioo/fusio-docs/edit/main/docs/backend/api/connection/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Worker-Python",permalink:"/docs/backend/api/action/worker-python"},next:{title:"AMQP",permalink:"/docs/backend/api/connection/amqp"}},l={},p=[{value:"Development",id:"development",level:2}],d={toc:p};function f(e){var n=e.components,a=(0,r.Z)(e,c);return(0,i.kt)("wrapper",(0,o.Z)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"connection"},"Connection"),(0,i.kt)("p",null,"A connection enables Fusio to connect to other remote services. This can be i.e. a database or message queue service.\nPlease take a look at the ",(0,i.kt)("a",{parentName:"p",href:"https://www.fusio-project.org/adapter"},"adapter")," to see a list of all available connections.\nIt is also easy possible to develop your own custom connection."),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",alt:"connection_create",src:t(1940).Z,width:"1305",height:"609"})),(0,i.kt)("h2",{id:"development"},"Development"),(0,i.kt)("p",null,"To develop a custom connection you need to create a class which implements the interface\n",(0,i.kt)("inlineCode",{parentName:"p"},"Fusio\\Engine\\ConnectionInterface"),". Then you can add this class to the ",(0,i.kt)("inlineCode",{parentName:"p"},"provider.php")," file. Through this it is possible\nto select this connection at the backend."),(0,i.kt)("p",null,"In the following an example connection:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App\\Connection;\n\nuse Fusio\\Engine\\ConnectionInterface;\nuse Fusio\\Engine\\Form\\BuilderInterface;\nuse Fusio\\Engine\\Form\\ElementFactoryInterface;\nuse Fusio\\Engine\\ParametersInterface;\n\nclass AcmeConnection implements ConnectionInterface\n{\n    public function getName(): string\n    {\n        return 'Acme-Client';\n    }\n\n    public function getConnection(ParametersInterface $config): MyClient\n    {\n        return new MyClient(\n            $config->get('username'),\n            $config->get('password'),\n        );\n    }\n\n    public function configure(BuilderInterface $builder, ElementFactoryInterface $elementFactory): void\n    {\n        $builder->add($elementFactory->newInput('username', 'Username', 'text', 'The name of the service user'));\n        $builder->add($elementFactory->newInput('password', 'Password', 'password', 'The password of the service user'));\n    }\n}\n")))}f.isMDXComponent=!0},1940:function(e,n,t){n.Z=t.p+"assets/images/connection_create-4f5ae6d794fd2106f56b725e1d163086.png"}}]);