"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[469],{3905:function(e,t,a){a.d(t,{Zo:function(){return l},kt:function(){return d}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),u=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=u(a),d=n,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||o;return a?r.createElement(m,i(i({ref:t},l),{},{components:a})):r.createElement(m,i({ref:t},l))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var u=2;u<o;u++)i[u]=a[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}f.displayName="MDXCreateElement"},9722:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},assets:function(){return l},toc:function(){return p},default:function(){return d}});var r=a(7462),n=a(3366),o=(a(7294),a(3905)),i=["components"],s={},c="Create API from Database",u={unversionedId:"use_cases/create_api_from_database",id:"use_cases/create_api_from_database",title:"Create API from Database",description:"Fusio provides a way to automatically create a REST API based on a database table. It creates automatically the fitting",source:"@site/docs/use_cases/create_api_from_database.md",sourceDirName:"use_cases",slug:"/use_cases/create_api_from_database",permalink:"/docs/use_cases/create_api_from_database",editUrl:"https://github.com/apioo/fusio-docs/edit/main/docs/use_cases/create_api_from_database.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Use-Cases",permalink:"/docs/use_cases/"},next:{title:"Create API from ElasticSearch",permalink:"/docs/use_cases/create_api_from_elasticsearch"}},l={},p=[],f={toc:p};function d(e){var t=e.components,s=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},f,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"create-api-from-database"},"Create API from Database"),(0,o.kt)("p",null,"Fusio provides a way to automatically create a REST API based on a database table. It creates automatically the fitting\nroutes, actions and schemas. This can be useful if you want to quickly create a CRUD API. To do this you need to go to\nthe routes panel and click there on the top right briefcase button, then you should see the following dialog:"),(0,o.kt)("p",null,(0,o.kt)("img",{loading:"lazy",alt:"routes_provider_sql_table",src:a(7669).Z,width:"1318",height:"727"})),(0,o.kt)("p",null,"For the ",(0,o.kt)("inlineCode",{parentName:"p"},"Connection")," you need to select the database connection which you want to use for the API and the ",(0,o.kt)("inlineCode",{parentName:"p"},"Table")," must\ncontain a valid table name. If you click on the changelog button you should see the following output:"),(0,o.kt)("p",null,(0,o.kt)("img",{loading:"lazy",alt:"routes_provider_sql_table_changelog",src:a(2793).Z,width:"1302",height:"795"})),(0,o.kt)("p",null,"There you see the routes, actions and schemas which the import would create. With a click on the Save Button you can\nstart the import. Fusio analyzes the table schema and creates based on this information the fitting schema."))}d.isMDXComponent=!0},7669:function(e,t,a){t.Z=a.p+"assets/images/routes_provider_sql_table-798404c35e9775f1882014673358454e.png"},2793:function(e,t,a){t.Z=a.p+"assets/images/routes_provider_sql_table_changelog-9982a3d28a97c95dedaff471bbafdecb.png"}}]);