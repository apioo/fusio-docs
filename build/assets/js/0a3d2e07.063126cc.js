"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3843],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,h=d["".concat(p,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(h,i(i({ref:t},s),{},{components:n})):a.createElement(h,i({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4328:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},assets:function(){return s},toc:function(){return u},default:function(){return m}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=["components"],l={},p="Develop custom action",c={unversionedId:"use_cases/develop_custom_action",id:"use_cases/develop_custom_action",title:"Develop custom action",description:"In Fusio it is easy possible to develop a custom action in case you want to implement a specific logic. This page",source:"@site/docs/use_cases/develop_custom_action.md",sourceDirName:"use_cases",slug:"/use_cases/develop_custom_action",permalink:"/docs/use_cases/develop_custom_action",editUrl:"https://github.com/apioo/fusio-docs/edit/main/docs/use_cases/develop_custom_action.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Deployment system",permalink:"/docs/use_cases/deployment_system"},next:{title:"File Uploads",permalink:"/docs/use_cases/file_uploads"}},s={},u=[{value:"Autoload",id:"autoload",level:2},{value:"Development",id:"development",level:2},{value:"Integration",id:"integration",level:2},{value:"API",id:"api",level:2},{value:"Dependency Injection",id:"dependency-injection",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"develop-custom-action"},"Develop custom action"),(0,r.kt)("p",null,"In Fusio it is easy possible to develop a custom action in case you want to implement a specific logic. This page\nexplains how to build a custom action."),(0,r.kt)("h2",{id:"autoload"},"Autoload"),(0,r.kt)("p",null,"To build a custom action you first need define autoloading in your ",(0,r.kt)("inlineCode",{parentName:"p"},"composer.json")," file so that Fusio is able to load\nyour class. Therefor you need to add the following config to the ",(0,r.kt)("inlineCode",{parentName:"p"},"composer.json")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "autoload": {\n    "psr-4": {\n      "App\\\\": "src/"\n    }\n  }\n}\n')),(0,r.kt)("p",null,"More information about composer autoloading at:\n",(0,r.kt)("a",{parentName:"p",href:"https://getcomposer.org/doc/01-basic-usage.md#autoloading"},"https://getcomposer.org/doc/01-basic-usage.md#autoloading")),(0,r.kt)("h2",{id:"development"},"Development"),(0,r.kt)("p",null,"Now you can create a PHP file at ",(0,r.kt)("inlineCode",{parentName:"p"},"src/Action/HelloWorld.php")," with the following content."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App\\Action;\n\nuse Fusio\\Engine\\ActionAbstract;\nuse Fusio\\Engine\\ContextInterface;\nuse Fusio\\Engine\\ParametersInterface;\nuse Fusio\\Engine\\RequestInterface;\n\nclass HelloWorld extends ActionAbstract\n{\n    public function handle(RequestInterface $request, ParametersInterface $configuration, ContextInterface $context): mixed\n    {\n        return $this->response->build(200, [], [\n            'hello' => 'world'\n        ]);\n    }\n}\n\n")),(0,r.kt)("p",null,"This hello world action is complete functional and can be directly used at your API."),(0,r.kt)("h2",{id:"integration"},"Integration"),(0,r.kt)("p",null,"You can also add this class to the ",(0,r.kt)("inlineCode",{parentName:"p"},"provider.php")," file under the ",(0,r.kt)("inlineCode",{parentName:"p"},"action")," key:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nreturn [\n    'action' => [\n        // ...\n        \\App\\Action\\HelloWorld::class,\n    ],\n    // ...\n];\n\n")),(0,r.kt)("p",null,"Then you can also select this action at the backend. If you want to create an action which is reusable for other users\nyou can also create a ",(0,r.kt)("a",{parentName:"p",href:"../concepts/adapter"},"Fusio adapter")," which allows other users to reuse your action. Please\ntake a look at our ",(0,r.kt)("a",{parentName:"p",href:"https://www.fusio-project.org/adapter"},"website")," to see all available adapter."),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("p",null,"Inside your action you have already most tools avaialble to complete many tasks. To see the complete action API please\ntake a look at our ",(0,r.kt)("a",{parentName:"p",href:"https://www.fusio-project.org/documentation/php"},"PHP API"),". In the following an example which shows\nsome interesting methods of the internal action API:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App\\Action;\n\nuse Fusio\\Engine\\ActionAbstract;\nuse Fusio\\Engine\\ContextInterface;\nuse Fusio\\Engine\\ParametersInterface;\nuse Fusio\\Engine\\RequestInterface;\n\nclass HelloWorld extends ActionAbstract\n{\n    public function handle(RequestInterface $request, ParametersInterface $configuration, ContextInterface $context): mixed\n    {\n        $myConnection = $this->connector->getConnection('My_Connection');\n\n        $this->dispatcher->dispatch('my_event', ['foo' => 'bar']);\n\n        $this->logger->info('A log message');\n\n        return $this->response->build(200, [], [\n            'hello' => 'world'\n        ]);\n    }\n}\n\n")),(0,r.kt)("p",null,"Through the connector you can obtain a connection which is configured at Fusio. This means you can get i.e. a database\nconnection or http client connection to work with a remote service. Which concrete instance the connector returns\ndepends always on the configured connection. The following table provides a first overview:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Return"),(0,r.kt)("th",{parentName:"tr",align:null},"Website"),(0,r.kt)("th",{parentName:"tr",align:null},"Class"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"AMQP"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PhpAmqpLib\\Connection\\AMQPStreamConnection")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/php-amqplib/php-amqplib"},"https://github.com/php-amqplib/php-amqplib")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fusio\\Adapter\\Amqp\\Connection\\Amqp"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Beanstalk"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pheanstalk\\Pheanstalk")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/pda/pheanstalk"},"https://github.com/pda/pheanstalk")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fusio\\Adapter\\Beanstalk\\Connection\\Beanstalk"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Elasticsearch"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Elasticsearch\\Client")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/elastic/elasticsearch-php"},"https://github.com/elastic/elasticsearch-php")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fusio\\Adapter\\Elasticsearch\\Connection\\Elasticsearch"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GraphQL"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fusio\\Adapter\\GraphQL\\ClientInterface")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/apioo/fusio-adapter-graphql/"},"https://github.com/apioo/fusio-adapter-graphql/")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fusio\\Adapter\\GraphQL\\Connection\\GraphQL"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"HTTP"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GuzzleHttp\\Client")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://docs.guzzlephp.org/en/latest/"},"http://docs.guzzlephp.org/en/latest/")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fusio\\Adapter\\Http\\Connection\\Http"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Memcache"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Memcache")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.php.net/manual/book.memcache.php"},"https://www.php.net/manual/book.memcache.php")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fusio\\Adapter\\Memcache\\Connection\\Memcache"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MongoDB"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MongoDB\\Database")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/mongodb/mongo-php-library"},"https://github.com/mongodb/mongo-php-library")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fusio\\Adapter\\Mongodb\\Connection\\MongoDB"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Redis"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Predis\\Client")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/predis/predis"},"https://github.com/predis/predis")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fusio\\Adapter\\Redis\\Connection\\Redis"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SMTP"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Symfony\\Component\\Mailer\\Mailer")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://symfony.com/doc/current/mailer.html"},"https://symfony.com/doc/current/mailer.html")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fusio\\Adapter\\Smtp\\Connection\\Smtp"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SOAP"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"SoapClient")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.php.net/manual/class.soapclient.php"},"https://www.php.net/manual/class.soapclient.php")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fusio\\Adapter\\Soap\\Connection\\Soap"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Sql"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Doctrine\\DBAL\\Connection")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://www.doctrine-project.org/projects/dbal.html"},"http://www.doctrine-project.org/projects/dbal.html")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Fusio\\Adapter\\Sql\\Connection\\Sql"))))),(0,r.kt)("h2",{id:"dependency-injection"},"Dependency Injection"),(0,r.kt)("p",null,"In case your action needs other external dependencies you can also simply declare the dependencies at the constructor.\nFusio tries then to inject the correct service via autowiring. Please take a look at the\n",(0,r.kt)("a",{parentName:"p",href:"../concepts/dependency_injection"},"dependency injection")," chapter to get more details how this works."))}m.isMDXComponent=!0}}]);