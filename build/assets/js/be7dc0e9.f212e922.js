"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1233],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=u(n),f=o,y=d["".concat(p,".").concat(f)]||d[f]||s[f]||a;return n?r.createElement(y,c(c({ref:t},l),{},{components:n})):r.createElement(y,c({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var u=2;u<a;u++)c[u]=n[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4728:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return l},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),c=["components"],i={},p="Worker-Python",u={unversionedId:"backend/api/action/worker-python",id:"backend/api/action/worker-python",title:"Worker-Python",description:"The Worker-Python executes the provided Python code at the remote worker. More",source:"@site/docs/backend/api/action/worker-python.md",sourceDirName:"backend/api/action",slug:"/backend/api/action/worker-python",permalink:"/docs/backend/api/action/worker-python",editUrl:"https://github.com/apioo/fusio-docs/edit/main/docs/backend/api/action/worker-python.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Worker-PHP",permalink:"/docs/backend/api/action/worker-php"},next:{title:"Connection",permalink:"/docs/backend/api/connection/"}},l=[{value:"Example",id:"example",children:[],level:2}],s={toc:l};function d(e){var t=e.components,n=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"worker-python"},"Worker-Python"),(0,a.kt)("p",null,"The Worker-Python executes the provided Python code at the remote worker. More\ninformation about the worker at: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/apioo/fusio-worker-python"},"https://github.com/apioo/fusio-worker-python")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def handle(request, context, connector, response, dispatcher, logger):\n\n    connection = connector.getConnection('my_db')\n\n    cursor = connection.cursor()\n    cursor.execute(\"\"\"SELECT * FROM app_todo\"\"\")\n    result = cursor.fetchall()\n    cursor.close()\n\n    data = []\n    for row in result:\n        data.append({\n            'id': row[0],\n            'status': row[1],\n            'title': row[2],\n            'insert_date': str(row[3])\n        })\n\n    return response.build(200, None, {\n        'foo': 'bar',\n        'result': data\n    })\n")))}d.isMDXComponent=!0}}]);