"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5038],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return b}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(t),b=o,h=d["".concat(c,".").concat(b)]||d[b]||p[b]||a;return t?r.createElement(h,i(i({ref:n},l),{},{components:t})):r.createElement(h,i({ref:n},l))}));function b(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5975:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return d}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],s={sidebar_position:6},c="Event",u={unversionedId:"backend/api/event",id:"backend/api/event",title:"Event",description:"Fusio has an event system which helps to build a pub/sub system. This means consumer of your API can subscribe to",source:"@site/docs/backend/api/event.md",sourceDirName:"backend/api",slug:"/backend/api/event",permalink:"/docs/backend/api/event",editUrl:"https://github.com/apioo/fusio-docs/edit/main/docs/backend/api/event.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Schema",permalink:"/docs/backend/api/schema"},next:{title:"Cronjob",permalink:"/docs/backend/api/cronjob"}},l=[{value:"Installation",id:"installation",children:[],level:2},{value:"Subscribe",id:"subscribe",children:[],level:2},{value:"Publish",id:"publish",children:[],level:2},{value:"Callback",id:"callback",children:[],level:2}],p={toc:l};function d(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"event"},"Event"),(0,a.kt)("p",null,"Fusio has an event system which helps to build a pub/sub system. This means consumer of your API can subscribe to\nspecific events. Inside your API endpoint you can then trigger such an event. Fusio will then send the payload to each\nsubscriber in the background."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"To enable Fusio to send messages at the background you need to activate the Cronjob feature. The event system creates a\ncronjob which distributes the pending events."),(0,a.kt)("h2",{id:"subscribe"},"Subscribe"),(0,a.kt)("p",null,"To subscribe for such an event the user needs to send a HTTP POST request to the ",(0,a.kt)("inlineCode",{parentName:"p"},"/consumer/subscription")," endpoint with\nthe following payload:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "event": "my_event",\n  "endpoint": "http://my-app.com/callback"\n}\n')),(0,a.kt)("h2",{id:"publish"},"Publish"),(0,a.kt)("p",null,'To publish an event you need to use the dispatcher to create an event. I.e. the following action shows how to dispatch\ndata to the event "my_event" which then sends the provided data JSON encoded to the subscribed endpoints.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App\\Action;\n\nuse Fusio\\Engine\\ActionAbstract;\nuse Fusio\\Engine\\ContextInterface;\nuse Fusio\\Engine\\ParametersInterface;\nuse Fusio\\Engine\\RequestInterface;\n\nclass Collection extends ActionAbstract\n{\n    public function handle(RequestInterface $request, ParametersInterface $configuration, ContextInterface $context)\n    {\n        // dispatch my event\n        $this->dispatcher->dispatch('my_event', [\n            'foo' => 'bar'\n        ]);\n    }\n}\n")),(0,a.kt)("h2",{id:"callback"},"Callback"),(0,a.kt)("p",null,"Fusio will send the following HTTP POST request to every subscribed endpoint. In case the endpoint returns a non\nsuccessful status code Fusio will try to resend the message up to 3 times."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'POST /callback HTTP/1.1\nHost: my-app.com\nContent-Type: application/json\nUser-Agent: Fusio/4.0.2@916a81045349cc0e149873b5b794777bb5f29a30\n\n{"foo": "bar"}\n')))}d.isMDXComponent=!0}}]);