"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[469],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||l;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9722:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return d},assets:function(){return p},toc:function(){return u},default:function(){return m}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),o=["components"],i={},s="Create API from Database",d={unversionedId:"use_cases/create_api_from_database",id:"use_cases/create_api_from_database",title:"Create API from Database",description:"Fusio provides a way to automatically create a REST API based on a database table. It creates automatically the fitting",source:"@site/docs/use_cases/create_api_from_database.md",sourceDirName:"use_cases",slug:"/use_cases/create_api_from_database",permalink:"/docs/use_cases/create_api_from_database",editUrl:"https://github.com/apioo/fusio-docs/edit/main/docs/use_cases/create_api_from_database.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Use-Cases",permalink:"/docs/use_cases/"},next:{title:"Create API from ElasticSearch",permalink:"/docs/use_cases/create_api_from_elasticsearch"}},p={},u=[{value:"Provider",id:"provider",level:2},{value:"Example",id:"example",level:2},{value:"Schema",id:"schema",level:3},{value:"/v1/product",id:"v1product",level:3},{value:"<code>GET</code>",id:"get",level:4},{value:"Parameters",id:"parameters",level:5},{value:"<code>POST</code>",id:"post",level:4},{value:"Request",id:"request",level:5},{value:"Response",id:"response",level:5},{value:"/v1/product/:id",id:"v1productid",level:3},{value:"<code>GET</code>",id:"get-1",level:4},{value:"Response",id:"response-1",level:5},{value:"<code>PUT</code>",id:"put",level:4},{value:"Request",id:"request-1",level:5},{value:"Response",id:"response-2",level:5},{value:"<code>DELETE</code>",id:"delete",level:4},{value:"Response",id:"response-3",level:5},{value:"Video",id:"video",level:2}],c={toc:u};function m(e){var t=e.components,i=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"create-api-from-database"},"Create API from Database"),(0,l.kt)("p",null,"Fusio provides a way to automatically create a REST API based on a database table. It creates automatically the fitting\nroutes, actions and schemas. This can be useful if you want to quickly create a CRUD API."),(0,l.kt)("h2",{id:"provider"},"Provider"),(0,l.kt)("p",null,"Go to the routes panel and click there on the top right briefcase button, then you should see the following dialog:"),(0,l.kt)("p",null,(0,l.kt)("img",{loading:"lazy",alt:"routes_provider_sql_table",src:n(7669).Z,width:"1318",height:"727"})),(0,l.kt)("p",null,"For the ",(0,l.kt)("inlineCode",{parentName:"p"},"Connection")," you need to select the database connection which you want to use for the API and the ",(0,l.kt)("inlineCode",{parentName:"p"},"Table")," must\ncontain a valid table name. If you click on the changelog button you should see the following output:"),(0,l.kt)("p",null,(0,l.kt)("img",{loading:"lazy",alt:"routes_provider_sql_table_changelog",src:n(2793).Z,width:"1302",height:"795"})),(0,l.kt)("p",null,"There you see the routes, actions and schemas which the import would create. With a click on the Save Button you can\nstart the import. Fusio analyzes the table schema and creates based on this information the fitting schema."),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("p",null,"The provider will create two routes below your ",(0,l.kt)("inlineCode",{parentName:"p"},"Base-Path"),". If your ",(0,l.kt)("inlineCode",{parentName:"p"},"Base-Path")," is i.e. ",(0,l.kt)("inlineCode",{parentName:"p"},"/v1/product")," for a table called\n",(0,l.kt)("inlineCode",{parentName:"p"},"app_product")," with the following schema:"),(0,l.kt)("h3",{id:"schema"},"Schema"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE `app_product` (\n  `id` int NOT NULL AUTO_INCREMENT,\n  `title` varchar(128) DEFAULT NULL,\n  `description` varchar(255) DEFAULT NULL,\n  `insert_date` datetime DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB;\n")),(0,l.kt)("p",null,"This would create the following API endpoints:"),(0,l.kt)("h3",{id:"v1product"},"/v1/product"),(0,l.kt)("h4",{id:"get"},(0,l.kt)("inlineCode",{parentName:"h4"},"GET")),(0,l.kt)("p",null,"Returns a collection response of all products"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "totalResults": 2,\n  "itemsPerPage": 16,\n  "startIndex": 0,\n  "entry": [\n    {\n      "id": 2,\n      "title": "foo bar",\n      "description": "lorem ipsum",\n      "insert_date": "2022-03-13T22:08:20+00:00"\n    },\n    {\n      "id": 1,\n      "title": "hello world",\n      "description": "lorem ipsum",\n      "insert_date": "2022-03-13T22:07:53+00:00"\n    }\n  ]\n}\n')),(0,l.kt)("p",null,"The endpoint supports the following query parameters:"),(0,l.kt)("h5",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"startIndex")),(0,l.kt)("td",{parentName:"tr",align:null},"The start index of the collection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"count")),(0,l.kt)("td",{parentName:"tr",align:null},"The count of results per page")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"sortBy")),(0,l.kt)("td",{parentName:"tr",align:null},"A column name to sort")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"sortOrder")),(0,l.kt)("td",{parentName:"tr",align:null},"The sort order either ",(0,l.kt)("inlineCode",{parentName:"td"},"ASC")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"DESC"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"filterBy")),(0,l.kt)("td",{parentName:"tr",align:null},"A column name to filter")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"filterOp")),(0,l.kt)("td",{parentName:"tr",align:null},"The filter operator either ",(0,l.kt)("inlineCode",{parentName:"td"},"contains"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"equals"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"startsWith")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"present"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"filterValue")),(0,l.kt)("td",{parentName:"tr",align:null},"The filter value")))),(0,l.kt)("h4",{id:"post"},(0,l.kt)("inlineCode",{parentName:"h4"},"POST")),(0,l.kt)("p",null,"Create a new product by sending the following JSON request to the endpoint:"),(0,l.kt)("h5",{id:"request"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "another entry",\n  "description": "lorem ipsum",\n  "insert_date": "2022-03-13T22:08:20+00:00"\n}\n')),(0,l.kt)("h5",{id:"response"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "success": true,\n  "message": "Entry successfully created",\n  "id": "4"\n}\n')),(0,l.kt)("h3",{id:"v1productid"},"/v1/product/:id"),(0,l.kt)("h4",{id:"get-1"},(0,l.kt)("inlineCode",{parentName:"h4"},"GET")),(0,l.kt)("p",null,"Returns a single product entry"),(0,l.kt)("h5",{id:"response-1"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "title": "hello world",\n  "description": "lorem ipsum",\n  "insert_date": "2022-03-13T22:07:53+00:00"\n}\n')),(0,l.kt)("h4",{id:"put"},(0,l.kt)("inlineCode",{parentName:"h4"},"PUT")),(0,l.kt)("p",null,"Updates a single product entity"),(0,l.kt)("h5",{id:"request-1"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "test world",\n  "description": "lorem ipsum",\n  "insert_date": "2022-03-13T22:07:53+00:00"\n}\n')),(0,l.kt)("h5",{id:"response-2"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "success": true,\n  "message": "Entry successfully updated"\n}\n')),(0,l.kt)("h4",{id:"delete"},(0,l.kt)("inlineCode",{parentName:"h4"},"DELETE")),(0,l.kt)("p",null,"Deletes a single product entry"),(0,l.kt)("h5",{id:"response-3"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "success": true,\n  "message": "Entry successfully deleted"\n}\n')),(0,l.kt)("h2",{id:"video"},"Video"),(0,l.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/3jHr_W9yjzM",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}))}m.isMDXComponent=!0},7669:function(e,t,n){t.Z=n.p+"assets/images/routes_provider_sql_table-798404c35e9775f1882014673358454e.png"},2793:function(e,t,n){t.Z=n.p+"assets/images/routes_provider_sql_table_changelog-9982a3d28a97c95dedaff471bbafdecb.png"}}]);